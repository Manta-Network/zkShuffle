//
// Copyright 2017 Christian Reitwiessner
// Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:
// The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
//
// 2019 OKIMS
//      ported to solidity 0.6
//      fixed linter warnings
//      added requiere error messages
//
// 2021 Remco Bloemen
//       cleaned up code
//       added InvalidProve() error
//       always revert with InvalidProof() on invalid proof
//       make Shuffle_encryptPairing strict
//
// SPDX-License-Identifier: GPL-3.0
pragma solidity ^0.8.4 || ^0.8.17;

library Shuffle_encryptPairing {
    error InvalidProof();

    // The prime q in the base field F_q for G1
    uint256 constant BASE_MODULUS =
        21888242871839275222246405745257275088696311157297823662689037894645226208583;

    // The prime moludus of the scalar field of G1.
    uint256 constant SCALAR_MODULUS =
        21888242871839275222246405745257275088548364400416034343698204186575808495617;

    struct G1Point {
        uint256 X;
        uint256 Y;
    }

    // Encoding of field elements is: X[0] * z + X[1]
    struct G2Point {
        uint256[2] X;
        uint256[2] Y;
    }

    /// @return the generator of G1
    function P1() internal pure returns (G1Point memory) {
        return G1Point(1, 2);
    }

    /// @return the generator of G2
    function P2() internal pure returns (G2Point memory) {
        return
            G2Point(
                [
                    11559732032986387107991004021392285783925812861821192530917403151452391805634,
                    10857046999023057135944570762232829481370756359578518086990519993285655852781
                ],
                [
                    4082367875863433681332203403145435568316851327593401208105741076214120093531,
                    8495653923123431417604973247489272438418190587263600148770280649306958101930
                ]
            );
    }

    /// @return r the negation of p, i.e. p.addition(p.negate()) should be zero.
    function negate(G1Point memory p) internal pure returns (G1Point memory r) {
        if (p.X == 0 && p.Y == 0) return G1Point(0, 0);
        // Validate input or revert
        if (p.X >= BASE_MODULUS || p.Y >= BASE_MODULUS) revert InvalidProof();
        // We know p.Y > 0 and p.Y < BASE_MODULUS.
        return G1Point(p.X, BASE_MODULUS - p.Y);
    }

    /// @return r the sum of two points of G1
    function addition(G1Point memory p1, G1Point memory p2)
        internal
        view
        returns (G1Point memory r)
    {
        // By EIP-196 all input is validated to be less than the BASE_MODULUS and form points
        // on the curve.
        uint256[4] memory input;
        input[0] = p1.X;
        input[1] = p1.Y;
        input[2] = p2.X;
        input[3] = p2.Y;
        bool success;
        // solium-disable-next-line security/no-inline-assembly
        assembly {
            success := staticcall(sub(gas(), 2000), 6, input, 0xc0, r, 0x60)
        }
        if (!success) revert InvalidProof();
    }

    /// @return r the product of a point on G1 and a scalar, i.e.
    /// p == p.scalar_mul(1) and p.addition(p) == p.scalar_mul(2) for all points p.
    function scalar_mul(G1Point memory p, uint256 s)
        internal
        view
        returns (G1Point memory r)
    {
        // By EIP-196 the values p.X and p.Y are verified to less than the BASE_MODULUS and
        // form a valid point on the curve. But the scalar is not verified, so we do that explicitelly.
        if (s >= SCALAR_MODULUS) revert InvalidProof();
        uint256[3] memory input;
        input[0] = p.X;
        input[1] = p.Y;
        input[2] = s;
        bool success;
        // solium-disable-next-line security/no-inline-assembly
        assembly {
            success := staticcall(sub(gas(), 2000), 7, input, 0x80, r, 0x60)
        }
        if (!success) revert InvalidProof();
    }

    /// Asserts the pairing check
    /// e(p1[0], p2[0]) *  .... * e(p1[n], p2[n]) == 1
    /// For example pairing([P1(), P1().negate()], [P2(), P2()]) should succeed
    function pairingCheck(G1Point[] memory p1, G2Point[] memory p2)
        internal
        view
    {
        // By EIP-197 all input is verified to be less than the BASE_MODULUS and form elements in their
        // respective groups of the right order.
        if (p1.length != p2.length) revert InvalidProof();
        uint256 elements = p1.length;
        uint256 inputSize = elements * 6;
        uint256[] memory input = new uint256[](inputSize);
        for (uint256 i = 0; i < elements; i++) {
            input[i * 6 + 0] = p1[i].X;
            input[i * 6 + 1] = p1[i].Y;
            input[i * 6 + 2] = p2[i].X[0];
            input[i * 6 + 3] = p2[i].X[1];
            input[i * 6 + 4] = p2[i].Y[0];
            input[i * 6 + 5] = p2[i].Y[1];
        }
        uint256[1] memory out;
        bool success;
        // solium-disable-next-line security/no-inline-assembly
        assembly {
            success := staticcall(
                sub(gas(), 2000),
                8,
                add(input, 0x20),
                mul(inputSize, 0x20),
                out,
                0x20
            )
        }
        if (!success || out[0] != 1) revert InvalidProof();
    }
}

library ShuffleEncryptVerifierKey {
    using Shuffle_encryptPairing for *;

    function vkeyPart2()
        external
        pure
        returns (Shuffle_encryptPairing.G1Point[116] memory IC)
    {
        
        IC[0] = Shuffle_encryptPairing.G1Point(
            452987554829437481229946320777014200489823354620417299261008144880501532245,
            20588611611633716068717973072126950304472046696263395535824873728340460492870
        );

        IC[1] = Shuffle_encryptPairing.G1Point(
            6126369430870011783898934313173628831869220754713760114240402157400350132910,
            4225470032729069326506087575082120700076142098168844838071648223636876879262
        );

        IC[2] = Shuffle_encryptPairing.G1Point(
            50479399711007998946374472570799911197543352622925801117841793184196870141,
            6660715107116978597654608280731609126766789580894753485097172688965554680346
        );

        IC[3] = Shuffle_encryptPairing.G1Point(
            10645881551741033904162074869683205934680250437205330136681200260809757191238,
            10564704444086989525221646723767207913615488805442243599327818666414025363108
        );

        IC[4] = Shuffle_encryptPairing.G1Point(
            5328466716976026957002457909888397138536453544531916991876534405442662975657,
            12940879501493515153665647259593131624222444893552424756329668432949401550511
        );

        IC[5] = Shuffle_encryptPairing.G1Point(
            20621973199298281600941465795290150562537052751025030113306960715467792941764,
            20422802931522695914359510694885504614417305973665488819881684816712591573582
        );

        IC[6] = Shuffle_encryptPairing.G1Point(
            1764283856582817963552052865427272364537522956314493348594242094072646114757,
            12432746687543590387095921614554528597628627315166579696768400087372688435102
        );

        IC[7] = Shuffle_encryptPairing.G1Point(
            13390976395853137306786979579844899017171373492308361561981011511517761248385,
            6714946143107216347907357561871576757271968337330750339329063007116347761586
        );

        IC[8] = Shuffle_encryptPairing.G1Point(
            3101554795368135523452882365118260859564178589971314623229778897304568457214,
            15596346270876469233310635536187885136525329054720448406679536705573317802972
        );

        IC[9] = Shuffle_encryptPairing.G1Point(
            11007336989145996130789044651897953394561365486407189135080781499165496058544,
            19996442538518941007039558555557397076531404569806590635921056185511030305220
        );

        IC[10] = Shuffle_encryptPairing.G1Point(
            10905096413227544111061097063180112134296876490375651960481421442588255864375,
            11783370234777013392717331178288130160893090490713725282286599472099040913133
        );

        IC[11] = Shuffle_encryptPairing.G1Point(
            19128514327328933493721952285959725925996454789798013319125037068164767060083,
            5428049426951372838522234466772658641883235607159118773728022016916185188399
        );

        IC[12] = Shuffle_encryptPairing.G1Point(
            18706404340525899852936562780319551173123858883796240764060751687856903973445,
            20604796686248985275326686425042133427466113409155566772706621358991867302350
        );

        IC[13] = Shuffle_encryptPairing.G1Point(
            19848481362546350494066121463820778608148785727361260138659341902812019929916,
            21867229820410363636459395174367757791884820439067831467959916325421711976669
        );

        IC[14] = Shuffle_encryptPairing.G1Point(
            12351852068222618849602292315937958852818457763197147613635273740678497634435,
            20048803870581863938352468970552153898483212167188115862517479912098297592243
        );

        IC[15] = Shuffle_encryptPairing.G1Point(
            15379808828479104711527790850726385007735497039619578940884699387870922254531,
            10168227167055259148062300077780945765214842142626533292756349045614073684733
        );

        IC[16] = Shuffle_encryptPairing.G1Point(
            11331990375532492790427763037069010879885673443827351354562212991733945370831,
            21586236632840665135167888358664402923772789915388030512495879630116346499550
        );

        IC[17] = Shuffle_encryptPairing.G1Point(
            7054222070294618571724642157384661847125276157456823035211633466323806627903,
            9231118965985692191583541505569554833200207720441196952001685967691851992288
        );

        IC[18] = Shuffle_encryptPairing.G1Point(
            16704009658286049419111930436135116246496240941835645935328418064761033164185,
            10043802721428886139114123451833876311868052224040108157653262366988023787645
        );

        IC[19] = Shuffle_encryptPairing.G1Point(
            2656886722929079249881394958945544884853385497104572496379378343111810470188,
            10364218707906830216477563130483985035252147998470574490827252732695559236531
        );

        IC[20] = Shuffle_encryptPairing.G1Point(
            9558348933648571468299830182104904180170501445361297098430680332648817283347,
            2273940470913772551291402972330942466309826531457566144465448663117296452763
        );

        IC[21] = Shuffle_encryptPairing.G1Point(
            20336207658852767624402404767405586947225969574174141912812109265080056019811,
            2963880459083175891412153109478614209938396612497396264159259557008191798317
        );

        IC[22] = Shuffle_encryptPairing.G1Point(
            11878044374868207030085573421592066583217091526945525428099690354756867723799,
            7063516920001485334175271837288685127069551074579723794937589878466479164883
        );

        IC[23] = Shuffle_encryptPairing.G1Point(
            21648559892486881055159871377524698698952261266323448506734745144778090437303,
            13416645216305323412337404474733651797168660322656724772201346958100515837785
        );

        IC[24] = Shuffle_encryptPairing.G1Point(
            10584861656881708777110775747692047096815755326949921957340568014180808723050,
            15996479741960630643953776888340825819934697249463232786473395814016021500836
        );

        IC[25] = Shuffle_encryptPairing.G1Point(
            21286180561863119370386463912691348361504240647053702651932936265058893129492,
            1105491093279551124225141554725567845208603976533430046757201312046791772821
        );

        IC[26] = Shuffle_encryptPairing.G1Point(
            15313655766904868225829975194569056983308232820914150832919464130461126177757,
            6227368225994678468053381123064307984458604240959228922327584912841875249855
        );

        IC[27] = Shuffle_encryptPairing.G1Point(
            21443340353392977072094986286878878312342171274204355764850791121944494254877,
            16696138049126985531185706832292819144326810370832946685372049988709797606246
        );

        IC[28] = Shuffle_encryptPairing.G1Point(
            13001941544234457940845015753225563947709404785152566328706086140499801796219,
            6899350556086910097340816219046754474155952427017308221633449731482897673416
        );

        IC[29] = Shuffle_encryptPairing.G1Point(
            14251426002892795099293500450341533162993218015270489386569324163101517528193,
            3991495684065216474361977727160864407270857790205361554486941224146730640205
        );

        IC[30] = Shuffle_encryptPairing.G1Point(
            19543118808372428107388952488780421074362659789161084540928610122351730229873,
            92550720200846021176593882520255598347978536788537192953630249889247716411
        );

        IC[31] = Shuffle_encryptPairing.G1Point(
            5432324113206826419052660407212086991839135188591904507277232723429091012321,
            11467978453887233360343515545860893124052154619877379915678624300372943438222
        );

        IC[32] = Shuffle_encryptPairing.G1Point(
            20969315257936142534989039576716550425798085158034809224402015659531463933363,
            18764794657165313485283779801385834648238385455594639839173743930560328690726
        );

        IC[33] = Shuffle_encryptPairing.G1Point(
            10947765444249494726119500093732190113650014954452467461220409979030417506187,
            9578768902173291851910706722331916952034848815612122648574285390030392409456
        );

        IC[34] = Shuffle_encryptPairing.G1Point(
            3079704637914380354184296307747461302231522314796415531991237401866757634208,
            12424712540041715669019160747610601864097297252810461312941390683136552470803
        );

        IC[35] = Shuffle_encryptPairing.G1Point(
            17004561612458535924238993285209307950077220691016025354465243743530429541135,
            8018367730084444226625178308476605659816398346930286542133352972267524027131
        );

        IC[36] = Shuffle_encryptPairing.G1Point(
            4683873821324794382612092298974038457535199227051019180466735709843819208246,
            1538456770134395251525076284352681561311928298891034992019070087281991580820
        );

        IC[37] = Shuffle_encryptPairing.G1Point(
            5227791591558443831416670880131485177384905050838002458594694252673745590331,
            21180384934024153548394577620762421807714292848474568207573088776243969784034
        );

        IC[38] = Shuffle_encryptPairing.G1Point(
            17562482600119071884682739464040428897888895575611303834868500221073376189834,
            1867393151725347743855630327958330327341700462697090633836618909475405863034
        );

        IC[39] = Shuffle_encryptPairing.G1Point(
            10678994881195170949782788493895414488654592319353987441046737745441640118668,
            7930950662540518562653020629143072217831724960065756378273826226558816427432
        );

        IC[40] = Shuffle_encryptPairing.G1Point(
            7027457874291921809379323126702389276073321145892713829911461028839047899436,
            9677077819758341155141989676969046591388076871318794473804491442710260069666
        );

        IC[41] = Shuffle_encryptPairing.G1Point(
            20719078579588124221495339462305579267992137692699971129576778036287640218599,
            20451120309324107407506527228304953468163509954137440191952154322658275289955
        );

        IC[42] = Shuffle_encryptPairing.G1Point(
            13679107044664048649899812766462819300763178649996675006431745445902550032154,
            9222889857880975045895570254878175569001189342060660751952967157619747710178
        );

        IC[43] = Shuffle_encryptPairing.G1Point(
            13563509352876866209387751403010327795382054252450863868857301609952660267097,
            4107333481832477524920317593711990114014667410489763008070869111494085329442
        );

        IC[44] = Shuffle_encryptPairing.G1Point(
            885789169390329294619874940833751880490855727879747547876615435372263424423,
            1775078248664753744544780363210308428990387360741189122864426314361027278016
        );

        IC[45] = Shuffle_encryptPairing.G1Point(
            14695369349133728489990130703814415305064250231828117017459199020778072594736,
            16566602047767557614950810141865611752985610977390817978630024213702179640502
        );

        IC[46] = Shuffle_encryptPairing.G1Point(
            3917504453495221156268180428760176085004007052090851843584283383265218543569,
            13968795499269201034635964537695810406703037244384932127886892380995550953536
        );

        IC[47] = Shuffle_encryptPairing.G1Point(
            1168035972860135435344138424391854251712036437888863404324968990010363229789,
            6203100166531660730756264481842760327439447959795515139189754790364141553423
        );

        IC[48] = Shuffle_encryptPairing.G1Point(
            6011503913203282648232325956336024145116029811015410887727235939794791182321,
            19064243944633879663635425319603100455668076152986530869952108114530337731557
        );

        IC[49] = Shuffle_encryptPairing.G1Point(
            17555819367486770413240961167318183407205525718841386705694027901212000996565,
            17454264707343667309504025459459355094981651711453614978158109001401528160297
        );

        IC[50] = Shuffle_encryptPairing.G1Point(
            4824699235268764024556627253498557621115200830627766760654831900325246019003,
            17312003454275192642340451830724935540804838754930809815642355714976414994253
        );

        IC[51] = Shuffle_encryptPairing.G1Point(
            9333089741411141264644404641347504544810414116257972222175716806978000132331,
            18725687348736768386854114453932433927333581080637146300294352957900736587463
        );

        IC[52] = Shuffle_encryptPairing.G1Point(
            21774964624705660467735130632072036550648278330539894823272979435719667297069,
            10428365881182552473120214016431558216037018603089842360255436597227528983987
        );

        IC[53] = Shuffle_encryptPairing.G1Point(
            16144689706154564793490842148088265643309395009353095634356335327292913561850,
            13604013990605877878221446710986569710840175352995801600650374421686561134599
        );

        IC[54] = Shuffle_encryptPairing.G1Point(
            21807079438300550379757698556990224927312510559558706942833849986012450013638,
            6728249490725054732236901132200962304523900250165202642491319185040994927733
        );

        IC[55] = Shuffle_encryptPairing.G1Point(
            20379715507466960566868726908408815258432051658701840711708615997884817954310,
            14130642783273589985101232768532484819331666122620317024659565639717137092762
        );

        IC[56] = Shuffle_encryptPairing.G1Point(
            15295083391178420166967070133861436007895352690149084727771431831459964427017,
            10681826183969024618404916550624054959101583969372902023709687826575573343131
        );

        IC[57] = Shuffle_encryptPairing.G1Point(
            8059610141493125181067545941017599107224102076516797741138493241413206887537,
            15468407131091161388366464952841796216514652993035165820259107226606686582219
        );

        IC[58] = Shuffle_encryptPairing.G1Point(
            14059042112719502599450911022747679384060598254743945538472409354625814594572,
            38518076542593066660746695442933146537392203174992539396083782800912758908
        );

        IC[59] = Shuffle_encryptPairing.G1Point(
            14092028957597392891730827882742574081717605904024593431118092129868411666124,
            18869809128962397577950321487645294554425160222314035627536223839311475972222
        );

        IC[60] = Shuffle_encryptPairing.G1Point(
            9183025336303473127339179263012548399806355509893176604106152146450997713580,
            2773152783109797908591055753548465661785062780694941405290295118388318168987
        );

        IC[61] = Shuffle_encryptPairing.G1Point(
            20761230760115273527160834182251981967957586529934027372372428341625808039691,
            10596871548967029862429823274003014824674218207948302839748548666705482908010
        );

        IC[62] = Shuffle_encryptPairing.G1Point(
            1209973529233982162131797482357731198515499215085382183805796912668174195844,
            9321088649619916462580628561811567105914122739114521832348583754106225410176
        );

        IC[63] = Shuffle_encryptPairing.G1Point(
            21869749798293567312520491048015123535575669604111777996848968874201190469282,
            16761133094701937591992828757557699450843068870822295097614115310129137252907
        );

        IC[64] = Shuffle_encryptPairing.G1Point(
            18548858544949725689037597377289844940200196983979251609291262273090449127046,
            1008459005555762877861212717580563943646519563711418478872366995374217116713
        );

        IC[65] = Shuffle_encryptPairing.G1Point(
            17609032551846702359978149019578358421367513583579623209644305360780943365321,
            4204975348605972348678935396216286456832836283485338924763035867850059776169
        );

        IC[66] = Shuffle_encryptPairing.G1Point(
            1753932744414724585154841303718745290957803012920974086493397327521144796762,
            1683695898741002734696860909446865253597542984386584674978409153328682863529
        );

        IC[67] = Shuffle_encryptPairing.G1Point(
            14199332382881375671276825981171035584510020456043442236826221713953845458753,
            20484254846464807434947750829112468237775796558938655017114556815274832993994
        );

        IC[68] = Shuffle_encryptPairing.G1Point(
            16334726862963458724896357664408131695356807715674434934567889994796384247255,
            9211488826931978671235855903628189827577438486231198304829464449818951791260
        );

        IC[69] = Shuffle_encryptPairing.G1Point(
            17482366026711985074102984248270548366844796378999981782059935151196984195067,
            5367575761607467623511465005894460598079195574008115056228189634080256918191
        );

        IC[70] = Shuffle_encryptPairing.G1Point(
            2017081431057134477843607152528975061165081425689278391865885278233467511227,
            6539080273179444171033564196389305563261483012815322778994807860824858257486
        );

        IC[71] = Shuffle_encryptPairing.G1Point(
            19632931395712471704590165645783536457134890249520801449306777058656698232386,
            4094391571201699120652719954061449228645891638772729268832582916784926479119
        );

        IC[72] = Shuffle_encryptPairing.G1Point(
            11490666708142682017958378097512940205332248616511569078975345789694945225569,
            19526086463445226767579712927576558866312139770291151393527207779241033699967
        );

        IC[73] = Shuffle_encryptPairing.G1Point(
            12682886174263590610982424936639633123752656814885742584209589756036170331905,
            15883016965245835425672435941556533466780735731933863427331294860427200753640
        );

        IC[74] = Shuffle_encryptPairing.G1Point(
            18891379702153872823491570928525122097283493942587079172296634257353775538957,
            6090592970237124414517940228702919587450542377431440073265432137996624618007
        );

        IC[75] = Shuffle_encryptPairing.G1Point(
            18474034503952795150614596559813405947139901852955523487426189145536435555332,
            14738655886877759788429763182943070437197259186934051052313599074706289697211
        );

        IC[76] = Shuffle_encryptPairing.G1Point(
            13894783221288209808679467408511502299053003404779724533858345984957201300263,
            5040175413718054108536381814782180358019719508135219811608860203272979596786
        );

        IC[77] = Shuffle_encryptPairing.G1Point(
            10880052555248934698620631974023880919809366462699784031523227085707751556117,
            11356453660264193248494471532392362151689275196752000792150348790221322863449
        );

        IC[78] = Shuffle_encryptPairing.G1Point(
            11640681998678672574784280982993478331299513270547476522326908485436975671930,
            2954423156528883085989084613922781223815593664422338059020222308170112791955
        );

        IC[79] = Shuffle_encryptPairing.G1Point(
            11291693286990316491064085501735638543403082163315360472043665305405670377473,
            17438688265204106568413268530497876473907544039765495213847044420411814318156
        );

        IC[80] = Shuffle_encryptPairing.G1Point(
            14943594624175503204203632744650644645945984632803966726231897900797592248624,
            15902574245838336656052682656458123905460582263718535669274757144641099560343
        );

        IC[81] = Shuffle_encryptPairing.G1Point(
            12098385596360167918961280801438160120086879419903340653182675471082854736896,
            14863584102872187983358917586275777172802954675420947104402569363472203235616
        );

        IC[82] = Shuffle_encryptPairing.G1Point(
            11602354982392575076379892597743923587246578664013455820292832504707281954976,
            4641425354044445790832711439944642261698747349549539370194300791560917590380
        );

        IC[83] = Shuffle_encryptPairing.G1Point(
            14382427808542708908539010293898586219861726572527740205006069924608331574694,
            15087792687025742937293300211507148213026795487922483830645082826203626699889
        );

        IC[84] = Shuffle_encryptPairing.G1Point(
            14361002678380468161205137444398972748308152534313031773002118810671182803556,
            6258747919849270520987585820150835222186581555468746420460415794200284831282
        );

        IC[85] = Shuffle_encryptPairing.G1Point(
            20211912835886133679120400453253441749773848732489602698990810102567475713793,
            7208541552267603399614055730710757458332909110854616719478508650234821690435
        );

        IC[86] = Shuffle_encryptPairing.G1Point(
            5658659821864447582470683978437318384940339819576249104925467422243942102462,
            3286896671033162665856002821157136578689192034227669965430656483607741558023
        );

        IC[87] = Shuffle_encryptPairing.G1Point(
            1144656847512744289557080915721868573837621516520720197463693074322948818529,
            1647022321862283100580243964646789439914568543663872857593726073449836320791
        );

        IC[88] = Shuffle_encryptPairing.G1Point(
            1344532008253636668178013864788433868087117795471215921394276558957764343013,
            7687179027074195851537500465215292671682971914489184578463327534186538322566
        );

        IC[89] = Shuffle_encryptPairing.G1Point(
            16563584910876814815065156635258885081131972207953306144264746720454222345828,
            5800307607854453278758171463976847858384787424571821914083927385939851055258
        );

        IC[90] = Shuffle_encryptPairing.G1Point(
            10033809278188554663774468409353984742740216156968850494525903372362547677182,
            17862684449533638262002756557990367640337282816391636361801398184101068909353
        );

        IC[91] = Shuffle_encryptPairing.G1Point(
            5213244948797297588008404750127298006860218555892434121974076969189741051378,
            21476729206532562683108887848389658065726382388857297511188663664024282193942
        );

        IC[92] = Shuffle_encryptPairing.G1Point(
            18522951819225297888574896023503954191694182969085930253841428621252901622251,
            8925552714702138270432174615681456281207395138648675923805088673576248128554
        );

        IC[93] = Shuffle_encryptPairing.G1Point(
            17888898527740658764022594001864800844538090035873511576233959798427453362794,
            4449542211158129469651423470185378712174194398767928858921019856583223647213
        );

        IC[94] = Shuffle_encryptPairing.G1Point(
            20045125277699696266846838941366419796387023598416158243616434547289594952548,
            4661259934614559518933217558073284269306432739915234318880253258262842506218
        );

        IC[95] = Shuffle_encryptPairing.G1Point(
            19154909735852037119163540897097565494560798157939351124537201596153864792416,
            17732452714941833062987442980719677544934685540478985408939605624275465328677
        );

        IC[96] = Shuffle_encryptPairing.G1Point(
            17751232779768423792888022901987142003023040220845510980132892776503165095996,
            4260923995425364157620360553936020876180238612981181207420145068748974552256
        );

        IC[97] = Shuffle_encryptPairing.G1Point(
            7302887048260639199846134898046558105470692866320472420800549751501367548274,
            12630360085931835927534554531573725955099307079491343313230810193884163820210
        );

        IC[98] = Shuffle_encryptPairing.G1Point(
            4875332498272585441963803581595820868905741158761540955417932851454587933117,
            6211439615231052354153942724966175200320931109735020458108992557732011618484
        );

        IC[99] = Shuffle_encryptPairing.G1Point(
            16089763203753964644426458115814863493533959735145987495394797577660371779720,
            3274857298322295483280602688349252113754159231301518128324889278219143393663
        );

        IC[100] = Shuffle_encryptPairing.G1Point(
            3124700224850015232083191858816829016910466628216369302447011595548237258802,
            6211545510850411799289679129315184082256966531070929064302041985348315781852
        );

        IC[101] = Shuffle_encryptPairing.G1Point(
            9100256133373142600522970945170827300024895368365385952410598820311659854079,
            18931472625744312105267749284139214444738247977241778358567257121234031949890
        );

        IC[102] = Shuffle_encryptPairing.G1Point(
            4820865921572139486584017706337039037032942317781714667446537405456709928031,
            20984312689634782522639931755742814589830831766102678240227594720710939992951
        );

        IC[103] = Shuffle_encryptPairing.G1Point(
            17826729265314130559815673607120669259461033375723859562216591957362172701767,
            9656450386303477582008999738591642900182491260288824022635294015541372887452
        );

        IC[104] = Shuffle_encryptPairing.G1Point(
            4456800013196131522909077566754296829875674053977812233976410533681425295613,
            3617386484384864696589682441482141599176490177544180426955178986570806788396
        );

        IC[105] = Shuffle_encryptPairing.G1Point(
            8316065484758118537296493108328649728700892751559468976402290280101490385437,
            13008930648944145203365144791067477806462683881612830156742470482084975500486
        );

        IC[106] = Shuffle_encryptPairing.G1Point(
            13937763847022024014541489429469083825209246571816482110056051253987980879476,
            11249900962255192056153704520323821400430004362438562670009070378021595605944
        );

        IC[107] = Shuffle_encryptPairing.G1Point(
            961291012917931271971794869739902112966519374624650586935304387301317702705,
            13349888783927927466442403904812987069093423830202583731066070811863033687526
        );

        IC[108] = Shuffle_encryptPairing.G1Point(
            16364087689026751720771602138791637120362829080404696140942877816377965003813,
            2192360571699289581848819998361554142714257753573107526161395541615337679030
        );

        IC[109] = Shuffle_encryptPairing.G1Point(
            19591172000594208781214868889142170019164304217955921920158611358020631903399,
            2253001156575716518162806927072031328458328285656897177505902711488581444021
        );

        IC[110] = Shuffle_encryptPairing.G1Point(
            10061466828278257879940361290216783962552587469381995496504138157136699459619,
            2084654502251231158623389108427596301104410727318658755886485404232265711982
        );

        IC[111] = Shuffle_encryptPairing.G1Point(
            5047358973148378475587152882863946529002727435047293143520502313447860667454,
            4952060746057681841993157379165890143617330651779698944343330359819957302296
        );

        IC[112] = Shuffle_encryptPairing.G1Point(
            11780024181637587712156123131660746967372907787195815446123008021030216990110,
            1724613473875111255233244223782287991056072511766758806549939533259538558045
        );

        IC[113] = Shuffle_encryptPairing.G1Point(
            1361907449707758004430456723094953981409384618036880333726173557019775643123,
            1396307300194695204560153775792215169475712217101611935571551073367694531648
        );

        IC[114] = Shuffle_encryptPairing.G1Point(
            11623342184306533112780079170570912918230864247909273789617899324474502187447,
            10888838535689466717983783465844383570701660389226337994275162849716129999664
        );

        IC[115] = Shuffle_encryptPairing.G1Point(
            6124783859307595499636222170266461198066236620256318858241418939512690846210,
            11654418425708266811153155440004903940468493436695057573773222233855590160231
        );
    }
}

contract Shuffle_encryptVerifier {
    using Shuffle_encryptPairing for *;
    using ShuffleEncryptVerifierKey for *;

    struct VerifyingKey {
        Shuffle_encryptPairing.G1Point alfa1;
        Shuffle_encryptPairing.G2Point beta2;
        Shuffle_encryptPairing.G2Point gamma2;
        Shuffle_encryptPairing.G2Point delta2;
        Shuffle_encryptPairing.G1Point[] IC;
    }

    struct Proof {
        Shuffle_encryptPairing.G1Point A;
        Shuffle_encryptPairing.G2Point B;
        Shuffle_encryptPairing.G1Point C;
    }

    function verifyingKey() internal pure returns (VerifyingKey memory vk) {
        vk.alfa1 = Shuffle_encryptPairing.G1Point(
            14378794661994809316668936077887579852844330409586136188493910229510707683568,
            19007180918058273234125706522281291487787880146734549337345180962710738215208
        );

        vk.beta2 = Shuffle_encryptPairing.G2Point(
            [
                5920706861016946300912146506670818945013737603659177373891149557636543490740,
                12055325713222300848813253111985210672218263044214498326157766255150057128762
            ],
            [
                9700420230412290932994502491200547761155381189822684608735830492099336040170,
                14277278647337675353039880797101698215986155900184787257566473040310971051502
            ]
        );

        vk.gamma2 = Shuffle_encryptPairing.G2Point(
            [
                11559732032986387107991004021392285783925812861821192530917403151452391805634,
                10857046999023057135944570762232829481370756359578518086990519993285655852781
            ],
            [
                4082367875863433681332203403145435568316851327593401208105741076214120093531,
                8495653923123431417604973247489272438418190587263600148770280649306958101930
            ]
        );

        vk.delta2 = Shuffle_encryptPairing.G2Point(
            [
                1599085544130560197340589699093285867978295580495929927603241540395136419395,
                286834459570116294702506143249354074043440265302958207320783912479505985195
            ],
            [
                10692502395834260408120153088786581131768948904593666409783489167379858777648,
                18897781512432153650875283302749513355048559406811261766515612847140979352390
            ]
        );

        vk.IC = new Shuffle_encryptPairing.G1Point[](216);


        vk.IC[116] = Shuffle_encryptPairing.G1Point(
            11976417498514914912750414175456702306843413646040221039062851247088509217878,
            16555983317326734322100010817445636022281238681182715698078945752735647300082
        );

        vk.IC[117] = Shuffle_encryptPairing.G1Point(
            2132125313190147327663404604428015937967047155851912765512275238424484618117,
            21746968555622091392044707814331772598114481548815781646306899891364029178430
        );

        vk.IC[118] = Shuffle_encryptPairing.G1Point(
            12935207606620261789628604340498957543368225283200775348265519430484862923793,
            15626703104241434387356621988285708223335267637606857186773174684307705451642
        );

        vk.IC[119] = Shuffle_encryptPairing.G1Point(
            17010033523085371141858786798982360516022860077151037452736191587131050128276,
            10773475930960370976671258275485863540716938004536607798474086138371887800439
        );

        vk.IC[120] = Shuffle_encryptPairing.G1Point(
            11953520675141112861456601737014076292697795937785251540873001131285555641733,
            15281160025214167048777438284446542765985636029715530693096512672181400583657
        );

        vk.IC[121] = Shuffle_encryptPairing.G1Point(
            16191611928372768299576339789378804174936430974202255667438542462412039935317,
            10355806009882081203497567560039478641028371740146166771772540085951272517633
        );

        vk.IC[122] = Shuffle_encryptPairing.G1Point(
            13799184837682491431697050623208976672331620471264961433710772593685879490265,
            13359020907184889891156731713792728430546725199295472877205419019516125060096
        );

        vk.IC[123] = Shuffle_encryptPairing.G1Point(
            15166675180695060656671114192931173135204014172727306515377989962882871893452,
            21469495051764234787689047584062952852856872883086109009603715799720503193452
        );

        vk.IC[124] = Shuffle_encryptPairing.G1Point(
            3651765441416287945242103931370844520138339909966493423413480413467015123888,
            7789270080491911416202812116444065162144180412391910879286863365872016235583
        );

        vk.IC[125] = Shuffle_encryptPairing.G1Point(
            9600202049493185131597107207545083691083297113245371118516611632160919442458,
            21264894863483302212261067128728119962842029613323286102120857532075491389212
        );

        vk.IC[126] = Shuffle_encryptPairing.G1Point(
            19558450196167284702394446749076871284947618845505633615571339824567490949328,
            15003091635350863434975137286003691251614451433178331490457282250858806379236
        );

        vk.IC[127] = Shuffle_encryptPairing.G1Point(
            7974080208038921702505620890159450010496958876424222220856909763755349899499,
            1490993733172674133484484532886822537582786211388003546436994567905033961902
        );

        vk.IC[128] = Shuffle_encryptPairing.G1Point(
            10635719247768214841315695362439142790482997232412125978040405684710712312400,
            2225569268301799464379696667445579148029329257087947754954366162001566375239
        );

        vk.IC[129] = Shuffle_encryptPairing.G1Point(
            8835545015819348787491111586606461636755408196452145204886190876371477782402,
            14580548763782393071951816523691657226064900482319424809042316763218135644855
        );

        vk.IC[130] = Shuffle_encryptPairing.G1Point(
            6424254513133546301512429464976612945093178636194485487844064189026729666889,
            12849292875964890977495285257163556554043109884182961840889874663936800130466
        );

        vk.IC[131] = Shuffle_encryptPairing.G1Point(
            15525499786586004569901570021307444828439109711657257647726086328147099449431,
            12770594875705854579005867871824286945145011691329082036049263133179917794803
        );

        vk.IC[132] = Shuffle_encryptPairing.G1Point(
            3896247763457437935464890907249105544282402713712968003301876351939786784823,
            19643638561262224847942111729275254325534251894703689644539659166080739661499
        );

        vk.IC[133] = Shuffle_encryptPairing.G1Point(
            18354132189987467714578302656668192579350691639624993566431450159961623264054,
            6293000185060651278673868417589876590883295756250366222554111875335207159973
        );

        vk.IC[134] = Shuffle_encryptPairing.G1Point(
            5589699283237403670721182977967951939878445976017576245404026296832369256552,
            12494647520484999828497808984449357310307875851032425623192077895325795974448
        );

        vk.IC[135] = Shuffle_encryptPairing.G1Point(
            6388379047285030901905705039441268258166525962622990688883635049293616997462,
            15447864842469611723999436313564614057071800245057264003997571804863915634366
        );

        vk.IC[136] = Shuffle_encryptPairing.G1Point(
            8814616582178744295319058691296049438996324760892120615036241919501844537295,
            3374160408836466585827998258035249305307810651635917079919223865560096386646
        );

        vk.IC[137] = Shuffle_encryptPairing.G1Point(
            7604287612196893171677551068979464932837868245229819833423361353136300094264,
            13775885269528921571678193491000591231304961261785105527398627779653659704915
        );

        vk.IC[138] = Shuffle_encryptPairing.G1Point(
            19948639476938281718506786480076898198356207066093853203242510428245812689811,
            9426056835487540894127034608306746577816794810647620352539984396070002226536
        );

        vk.IC[139] = Shuffle_encryptPairing.G1Point(
            10143093369789834877912029466914067131591661377113369331319696217437592083336,
            9968277411034720956194877222804249341905703687110141257703691917617731103583
        );

        vk.IC[140] = Shuffle_encryptPairing.G1Point(
            17992039382193877213326595696208530364369833167341524706992503176643448188232,
            18136499695102421380679057624077607076834318902231369108244751555699125633666
        );

        vk.IC[141] = Shuffle_encryptPairing.G1Point(
            13232047845375834953989655162682827644394585840580566526293075973171593466715,
            2015754000429281072793684822774000652413387514911611871210541282304129770558
        );

        vk.IC[142] = Shuffle_encryptPairing.G1Point(
            166100570821078282370343704430299601262430150499860458071579568572464281209,
            19086852127486564029973662613890947947713600402924609840579680001985748926638
        );

        vk.IC[143] = Shuffle_encryptPairing.G1Point(
            6513669260004143824036564753979062367806481422616596802570283128562187362934,
            10736456432529299366779568971552159399152675321254004827384573912415937895217
        );

        vk.IC[144] = Shuffle_encryptPairing.G1Point(
            13155400753621227950931113657654721391233748466177297217639885025304912434087,
            444344396478820853542987743359220940065401968420184252853371130343799014519
        );

        vk.IC[145] = Shuffle_encryptPairing.G1Point(
            12131655806582516081066449464759929376840771653605274087031207636738251463577,
            12266779625530438157794330297514101634174912354857165363078637505619583810455
        );

        vk.IC[146] = Shuffle_encryptPairing.G1Point(
            6764986963672950835323808001069553024465111331950890365410523298159297335639,
            16220937330960945204787201819238794493105276523102877463807577721995767417537
        );

        vk.IC[147] = Shuffle_encryptPairing.G1Point(
            8063990216773789833512912791991455630597861006168623867000832131275458402261,
            8351035125845670915110620764051882694934177668068329101643061480200604907717
        );

        vk.IC[148] = Shuffle_encryptPairing.G1Point(
            6789512153393624451869226206442608880307144029961476384323548122818220258381,
            9043229831555588707239192803985529489265328620174685834418545584073234981889
        );

        vk.IC[149] = Shuffle_encryptPairing.G1Point(
            21491583690268259335781222616698604845689614783378463668793423699580073388471,
            15703094010019503992721159210223968288467875778774531512984149825855756962585
        );

        vk.IC[150] = Shuffle_encryptPairing.G1Point(
            20827123246869799548408416955014407889526648394485443516613943631081109274048,
            17173207941503994597107244766567415411027390421945245867691218724161106682376
        );

        vk.IC[151] = Shuffle_encryptPairing.G1Point(
            9320748993719286019448174601396836779704852183162977138730187957853927348020,
            20424756982187516845636544614561606329577478841867978692299402905735489709348
        );

        vk.IC[152] = Shuffle_encryptPairing.G1Point(
            10012982625064082254040469110809541544633028062107765794802560244720346048514,
            18558301311946030745640592155701455748932134115506966458088913396337554799324
        );

        vk.IC[153] = Shuffle_encryptPairing.G1Point(
            10913743175234292073765904343402756686355364528643883911330404635018026715819,
            11290133208450880064856811213033875436811615524327032890939067197509649668451
        );

        vk.IC[154] = Shuffle_encryptPairing.G1Point(
            6198115563835388408803809263083583344839892978937261064733866047186745366252,
            16306797999182958223339246724764982676247747592615248702199064066446117003029
        );

        vk.IC[155] = Shuffle_encryptPairing.G1Point(
            15609692914543574488525605840645746677300817734786221483276225148951969144559,
            13537805642029017397787750172030608376639279609956698657405351578866062007258
        );

        vk.IC[156] = Shuffle_encryptPairing.G1Point(
            17070739525940965283226404081715954080473965307087097956690629517178573489062,
            11298123213296432217846683876467583704158108436066356508195201337960691475535
        );

        vk.IC[157] = Shuffle_encryptPairing.G1Point(
            16600455355041582004072389377644758065196764223637201641330820983693795861005,
            1126740767306709865005190677203491503268139482522544594435132252689235491717
        );

        vk.IC[158] = Shuffle_encryptPairing.G1Point(
            1753116852265107094903632058327229006683815666794761835433697948098769262864,
            8256002018709783797080311060726663592396439888158850536409663334392119398521
        );

        vk.IC[159] = Shuffle_encryptPairing.G1Point(
            14884657965467110308388972144424487934644255232428892242266913497559286808507,
            622738664344181694133305021045492345400993764170107699146080161400811806157
        );

        vk.IC[160] = Shuffle_encryptPairing.G1Point(
            17989943802590919009931091079099464407912150301053449713009289191112395717859,
            13041282420842447357244840764204590485504533920831879183594333844589642891977
        );

        vk.IC[161] = Shuffle_encryptPairing.G1Point(
            192442491003421872227827929977546574266233914787330130660879117029033646320,
            21670167474788252545152820163011398118902991779087624805079331156782939512952
        );

        vk.IC[162] = Shuffle_encryptPairing.G1Point(
            10041422758315244736300696757085118391082895778387086584507368456521719238026,
            21222310210641179118127742148444784061602509140181096766819395043330602028596
        );

        vk.IC[163] = Shuffle_encryptPairing.G1Point(
            5543851875217390096510469381047765994901563396923042072330862252406073663794,
            1476090747748713541801698843207451031405834033650082003133878187044190887203
        );

        vk.IC[164] = Shuffle_encryptPairing.G1Point(
            8291694446160146373897488528112129379506832112711958956291496996325621884775,
            14467919249569267794226680266310976624398890567892525364189871054925109182876
        );

        vk.IC[165] = Shuffle_encryptPairing.G1Point(
            21812063088766438062093846739761935933075574048275894010962027164038229757473,
            18033837946878174480681694750679359492742568245307460157094714992707404457074
        );

        vk.IC[166] = Shuffle_encryptPairing.G1Point(
            19216712417020373550036662271959470171068302231304530582343012376954299743330,
            1349718155686218490749306906063347180661384712885015162181225502380770629330
        );

        vk.IC[167] = Shuffle_encryptPairing.G1Point(
            10873927746009381382071960426786537596867668927994136292426029546810096130857,
            9984158610505438655332527797436159506095733282505334473879258094051819908065
        );

        vk.IC[168] = Shuffle_encryptPairing.G1Point(
            7734035772382422048084546768304515004280825164579584807649905656269463976542,
            19708950177200088364210694360551721955995436664446994564732756318074241318137
        );

        vk.IC[169] = Shuffle_encryptPairing.G1Point(
            6091441466259084096630439140497407069926503821696729272150946977033178576290,
            5602307861975531013204189771771176314461875861616031945485501446216898591446
        );

        vk.IC[170] = Shuffle_encryptPairing.G1Point(
            5160463707044082965211712978781139804378530736798569495276722629336717464756,
            12130749952607123014452991731594848635114423945296843348497515314813439921518
        );

        vk.IC[171] = Shuffle_encryptPairing.G1Point(
            17844693616384903614334120596398230344025962402268135306900133104722031267918,
            21405237546258878679957182026232138597306677887831330487539515165118891885313
        );

        vk.IC[172] = Shuffle_encryptPairing.G1Point(
            16880116716587826864491787213636353955669742328738978673088482463797683488683,
            9994023020122347086011351906179677888180649000546896391497932655425200544548
        );

        vk.IC[173] = Shuffle_encryptPairing.G1Point(
            10887060399845665234804945437093859708158958924477759879743547812266346654867,
            8872197666381389952754020856574052992422935928769394416607756770262168860600
        );

        vk.IC[174] = Shuffle_encryptPairing.G1Point(
            8787158013866073513265370590115853255524183486627363368513715174737227446549,
            14766990747206105613587316265931797763703720589561415306451896743302868703337
        );

        vk.IC[175] = Shuffle_encryptPairing.G1Point(
            19046998539840728977643535798111806454043492483481502565256297532294412167331,
            21819132389878454937730783906734651252978027538453753388167102949980850007818
        );

        vk.IC[176] = Shuffle_encryptPairing.G1Point(
            16386119208794143074146095638665725804532756232596350082723530720224992635509,
            15049646259148967654023202479422987538760460166622676104149972419928969221743
        );

        vk.IC[177] = Shuffle_encryptPairing.G1Point(
            4405219439943921001936311283365570462051160270864162862248583572823141798026,
            2307310495650296105801894054497065943783087219339752197458386681627692781852
        );

        vk.IC[178] = Shuffle_encryptPairing.G1Point(
            12516285429529712416736171240914804324337849995166333588105303946756011524553,
            10491517343523507175361072694285643080873509677002365804425144206890972986556
        );

        vk.IC[179] = Shuffle_encryptPairing.G1Point(
            10804801657529282177404662005721720471858331554786904429928102991084092949055,
            2878934095415065761042878308773519179285676976664555056962906347209697544577
        );

        vk.IC[180] = Shuffle_encryptPairing.G1Point(
            793946410887828456261718651135538537091971673386269848897485488386603314157,
            12640244773392023120926435401505718602205726327138739021023234508538502320425
        );

        vk.IC[181] = Shuffle_encryptPairing.G1Point(
            19796634717690831324248254227891456618450693302142547641556738226535938857049,
            13250507115426036046310740781307677517424194019086901246555543131670205866283
        );

        vk.IC[182] = Shuffle_encryptPairing.G1Point(
            13158394955882213600346976629573719101985539784033654160525637213737629373019,
            16351396987993152749566984066234994161032191146991558180912663633632317829206
        );

        vk.IC[183] = Shuffle_encryptPairing.G1Point(
            11800252928443455101045874699471759083826372774272745281380501042174888216442,
            18737298545038323901534166034165597641707734616382286031720201245261274691664
        );

        vk.IC[184] = Shuffle_encryptPairing.G1Point(
            5169741056728483301678774385984576396335900042063534011216726845691515123665,
            10155145243544375314210200906998660002555600232374249664954714854555749308589
        );

        vk.IC[185] = Shuffle_encryptPairing.G1Point(
            949114234514474137609363255485184390664758798525174775376592515281870517381,
            15104863141771812933925053693749650312092271121851484203429739671350017244619
        );

        vk.IC[186] = Shuffle_encryptPairing.G1Point(
            18896730392199816153037288349588671870764112523417216028707915561378869666527,
            1461652854098383653033425669221338224322852733079313162141110039031626371702
        );

        vk.IC[187] = Shuffle_encryptPairing.G1Point(
            17461609855496243591519345398329931796112959472673485623758621395248213545649,
            17283952975077071908227705279911306040333872642639590847336703810020586460672
        );

        vk.IC[188] = Shuffle_encryptPairing.G1Point(
            9903420335405489966303944366339257806188129945542765141639941829192465755600,
            12485676561151323355101974037985693538201905512749185613388970871752551563658
        );

        vk.IC[189] = Shuffle_encryptPairing.G1Point(
            21703984820475630784994316067613878776704672152015114577280252842319383946726,
            10202892030908602947311406416343399100950272115937605568002456744733887200596
        );

        vk.IC[190] = Shuffle_encryptPairing.G1Point(
            4717396269233922610240547576493176976901514357024109652960007971524573901736,
            21656221997648835362457183264089219788998905139985285395013774568995585724550
        );

        vk.IC[191] = Shuffle_encryptPairing.G1Point(
            18475588975787547477978611779015701560296990569369446780243805573132658883231,
            5946343085539193794016728738612360506842769725423206953337530847912724400526
        );

        vk.IC[192] = Shuffle_encryptPairing.G1Point(
            10109751107248895621935203038866936712567700350234523821155507782803834749468,
            135867846373614596069212436384597637465654446853794096345118573603515744887
        );

        vk.IC[193] = Shuffle_encryptPairing.G1Point(
            11692961022466079276684019763802604772837013596214732525187851900744414836249,
            8474537230995430034090208533999568892885554623720166476836254857913034059436
        );

        vk.IC[194] = Shuffle_encryptPairing.G1Point(
            8949451304612201020278088099542419688862030850624656647313723627299210043218,
            7519652086785579500262355022669773682693476241488534968185815002336580322133
        );

        vk.IC[195] = Shuffle_encryptPairing.G1Point(
            1522878117977465501066909740618460740230420075854228282330022812735129664501,
            13614768540955582419869033333700959506325932089993566802856552444443766633894
        );

        vk.IC[196] = Shuffle_encryptPairing.G1Point(
            10513256870547524959651538888055695947794595617156157588817269704813878646613,
            7933370671900304034138414410150999140951607335759189615092555403342633584632
        );

        vk.IC[197] = Shuffle_encryptPairing.G1Point(
            18402528191003124997289671802467121587797622388278484442930799062034855181640,
            5479031030983595329986484425620540485443985898848179006500343618431234021696
        );

        vk.IC[198] = Shuffle_encryptPairing.G1Point(
            18994009937673271752676539245293680611975857778763298443472438910446939875398,
            1186369819572816892720072783889668786132162564092425841234079962714324377511
        );

        vk.IC[199] = Shuffle_encryptPairing.G1Point(
            10475261601786086141743094882282038459195520456658013748446022224794526943460,
            4039165332370131766956365844007145304220949165212574797185904571864826244468
        );

        vk.IC[200] = Shuffle_encryptPairing.G1Point(
            3181963759730463855447182974839334930355592039773276780394041148885395013682,
            2804164191303155869302803539263379597162539835939449566864048257905131330809
        );

        vk.IC[201] = Shuffle_encryptPairing.G1Point(
            6965616643471013864325632719616512563889749904752398162885579523982135399401,
            3338613590412668798704951515461112813003786395122344597128522297013716600552
        );

        vk.IC[202] = Shuffle_encryptPairing.G1Point(
            15599912565238481476126846175853253860988398831044353312007707714142644243825,
            192449097993064609257421284750280394529944423391598406365700556148530563824
        );

        vk.IC[203] = Shuffle_encryptPairing.G1Point(
            6573231078591069461095486773621588452233651399968689014270121413571906607534,
            6532713266750244002000664158100569653260006505663962938387546488058215079310
        );

        vk.IC[204] = Shuffle_encryptPairing.G1Point(
            5518040253128519807312612015748219729945985747863396394664312356202584697696,
            21327345629482707767129884621093463694872920818096153103334653117815063032714
        );

        vk.IC[205] = Shuffle_encryptPairing.G1Point(
            17033866652152067415093413157258059594232599100110374664544055420485823092129,
            199565913900409246908098651556038782567937672219336405664551366775295514345
        );

        vk.IC[206] = Shuffle_encryptPairing.G1Point(
            3668053752916024046516206465843524732960940858690296618068466685812308192065,
            8769686692328802611687831076313275687899219807172291065634037573271872477074
        );

        vk.IC[207] = Shuffle_encryptPairing.G1Point(
            2577963977516712974613516995689959794423472748833991929923741030401699283972,
            370793764845782020152081293482807096972256662288113048776682330253549322582
        );

        vk.IC[208] = Shuffle_encryptPairing.G1Point(
            20441867360187522214009765205537429684193241611136764547280540393558428180819,
            19508296066366561217719382906978518667720813825368979614551906017658533524739
        );

        vk.IC[209] = Shuffle_encryptPairing.G1Point(
            15846185247263489650047261024909253946543903046129162561522851357239661283138,
            12980716163693821551483520709688781841577125867021537632547157893421007230035
        );

        vk.IC[210] = Shuffle_encryptPairing.G1Point(
            6175636684474006093352375161340649232701606809069087990786721048502271842998,
            21339728590386072352316913074373412795763178904729008925382269521979603309117
        );

        vk.IC[211] = Shuffle_encryptPairing.G1Point(
            17313174633822395887507643347447763686631913265768594034035976077818265967461,
            6249942114028217668449411164382819253202970898934684184757125104639479662464
        );

        vk.IC[212] = Shuffle_encryptPairing.G1Point(
            12807476885679045137426042558739216961912084155391140549198953173361259664742,
            10859597670065873316032077577760708084318795319104692569119441085266914696661
        );

        vk.IC[213] = Shuffle_encryptPairing.G1Point(
            5554308491520084573769146584175194543995615417451200011045647070779058502636,
            2471440486399629587302183373227599443866455136483254907577625326648989545393
        );

        vk.IC[214] = Shuffle_encryptPairing.G1Point(
            13977911877043849979990613457991088709770369104434083974800189429284674744693,
            2454383579725594281354695885880954082133619410929877773600260501635363991687
        );

        vk.IC[215] = Shuffle_encryptPairing.G1Point(
            12356606381388573644095672728363883749284120766073280555303746053144143199501,
            2397977491492258591243782271884368509388038882649945071355074823337269057931
        );

        Shuffle_encryptPairing.G1Point[116]
            memory IC = ShuffleEncryptVerifierKey.vkeyPart2();
        for (uint256 i = 0; i < 116; i++) {
            vk.IC[i] = IC[i];
        }
    }

    /// @dev Verifies a Semaphore proof. Reverts with InvalidProof if the proof is invalid.
    function verifyProof(
        uint256[2] memory a,
        uint256[2][2] memory b,
        uint256[2] memory c,
        uint256[] memory input
    ) public view {
        // If the values are not in the correct range, the Shuffle_encryptPairing contract will revert.
        Proof memory proof;
        proof.A = Shuffle_encryptPairing.G1Point(a[0], a[1]);
        proof.B = Shuffle_encryptPairing.G2Point(
            [b[0][0], b[0][1]],
            [b[1][0], b[1][1]]
        );
        proof.C = Shuffle_encryptPairing.G1Point(c[0], c[1]);

        VerifyingKey memory vk = verifyingKey();

        // Compute the linear combination vk_x of inputs times IC
        if (input.length + 1 != vk.IC.length)
            revert Shuffle_encryptPairing.InvalidProof();
        Shuffle_encryptPairing.G1Point memory vk_x = vk.IC[0];
        for (uint256 i = 0; i < input.length; i++) {
            vk_x = Shuffle_encryptPairing.addition(
                vk_x,
                Shuffle_encryptPairing.scalar_mul(vk.IC[i + 1], input[i])
            );
        }

        // Check pairing
        Shuffle_encryptPairing.G1Point[]
            memory p1 = new Shuffle_encryptPairing.G1Point[](4);
        Shuffle_encryptPairing.G2Point[]
            memory p2 = new Shuffle_encryptPairing.G2Point[](4);
        p1[0] = Shuffle_encryptPairing.negate(proof.A);
        p2[0] = proof.B;
        p1[1] = vk.alfa1;
        p2[1] = vk.beta2;
        p1[2] = vk_x;
        p2[2] = vk.gamma2;
        p1[3] = proof.C;
        p2[3] = vk.delta2;
        Shuffle_encryptPairing.pairingCheck(p1, p2);
    }
}
